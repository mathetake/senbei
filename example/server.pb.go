// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server.proto

package main

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SenbeiTypes struct {
	SenbeiTypes          []string `protobuf:"bytes,1,rep,name=senbei_types,json=senbeiTypes,proto3" json:"senbei_types,omitempty"`
	MaxPrice             uint32   `protobuf:"varint,2,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SenbeiTypes) Reset()         { *m = SenbeiTypes{} }
func (m *SenbeiTypes) String() string { return proto.CompactTextString(m) }
func (*SenbeiTypes) ProtoMessage()    {}
func (*SenbeiTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}

func (m *SenbeiTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SenbeiTypes.Unmarshal(m, b)
}
func (m *SenbeiTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SenbeiTypes.Marshal(b, m, deterministic)
}
func (m *SenbeiTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SenbeiTypes.Merge(m, src)
}
func (m *SenbeiTypes) XXX_Size() int {
	return xxx_messageInfo_SenbeiTypes.Size(m)
}
func (m *SenbeiTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_SenbeiTypes.DiscardUnknown(m)
}

var xxx_messageInfo_SenbeiTypes proto.InternalMessageInfo

func (m *SenbeiTypes) GetSenbeiTypes() []string {
	if m != nil {
		return m.SenbeiTypes
	}
	return nil
}

func (m *SenbeiTypes) GetMaxPrice() uint32 {
	if m != nil {
		return m.MaxPrice
	}
	return 0
}

type NumGetSenbei struct {
	Num                  uint32   `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumGetSenbei) Reset() {
	*m = NumGetSenbei{}
}

func (m *NumGetSenbei) String() string { return proto.CompactTextString(m) }
func (*NumGetSenbei) ProtoMessage()    {}
func (*NumGetSenbei) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}

func (m *NumGetSenbei) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumGetSenbei.Unmarshal(m, b)
}
func (m *NumGetSenbei) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumGetSenbei.Marshal(b, m, deterministic)
}
func (m *NumGetSenbei) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumGetSenbei.Merge(m, src)
}
func (m *NumGetSenbei) XXX_Size() int {
	return xxx_messageInfo_NumGetSenbei.Size(m)
}
func (m *NumGetSenbei) XXX_DiscardUnknown() {
	xxx_messageInfo_NumGetSenbei.DiscardUnknown(m)
}

var xxx_messageInfo_NumGetSenbei proto.InternalMessageInfo

func (m *NumGetSenbei) GetNum() uint32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type Senbei struct {
	SenbeiType           string   `protobuf:"bytes,1,opt,name=senbei_type,json=senbeiType,proto3" json:"senbei_type,omitempty"`
	Price                uint32   `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Senbei) Reset()         { *m = Senbei{} }
func (m *Senbei) String() string { return proto.CompactTextString(m) }
func (*Senbei) ProtoMessage()    {}
func (*Senbei) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}

func (m *Senbei) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Senbei.Unmarshal(m, b)
}
func (m *Senbei) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Senbei.Marshal(b, m, deterministic)
}
func (m *Senbei) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Senbei.Merge(m, src)
}
func (m *Senbei) XXX_Size() int {
	return xxx_messageInfo_Senbei.Size(m)
}
func (m *Senbei) XXX_DiscardUnknown() {
	xxx_messageInfo_Senbei.DiscardUnknown(m)
}

var xxx_messageInfo_Senbei proto.InternalMessageInfo

func (m *Senbei) GetSenbeiType() string {
	if m != nil {
		return m.SenbeiType
	}
	return ""
}

func (m *Senbei) GetPrice() uint32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type Senbeis struct {
	Senbeis              []*Senbei `protobuf:"bytes,1,rep,name=senbeis,proto3" json:"senbeis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Senbeis) Reset()         { *m = Senbeis{} }
func (m *Senbeis) String() string { return proto.CompactTextString(m) }
func (*Senbeis) ProtoMessage()    {}
func (*Senbeis) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}

func (m *Senbeis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Senbeis.Unmarshal(m, b)
}
func (m *Senbeis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Senbeis.Marshal(b, m, deterministic)
}
func (m *Senbeis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Senbeis.Merge(m, src)
}
func (m *Senbeis) XXX_Size() int {
	return xxx_messageInfo_Senbeis.Size(m)
}
func (m *Senbeis) XXX_DiscardUnknown() {
	xxx_messageInfo_Senbeis.DiscardUnknown(m)
}

var xxx_messageInfo_Senbeis proto.InternalMessageInfo

func (m *Senbeis) GetSenbeis() []*Senbei {
	if m != nil {
		return m.Senbeis
	}
	return nil
}

func init() {
	proto.RegisterType((*SenbeiTypes)(nil), "senbei.example.SenbeiTypes")
	proto.RegisterType((*NumGetSenbei)(nil), "senbei.example.NumGetSenbei")
	proto.RegisterType((*Senbei)(nil), "senbei.example.Senbei")
	proto.RegisterType((*Senbeis)(nil), "senbei.example.Senbeis")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2b, 0x4e, 0xcd, 0x4b, 0x4a, 0xcd,
	0xd4, 0x4b, 0xad, 0x48, 0xcc, 0x2d, 0xc8, 0x49, 0x55, 0xf2, 0xe5, 0xe2, 0x0e, 0x06, 0x8b, 0x84,
	0x54, 0x16, 0xa4, 0x16, 0x0b, 0x29, 0x82, 0x94, 0x83, 0xb8, 0xf1, 0x25, 0x20, 0xbe, 0x04, 0xa3,
	0x02, 0xb3, 0x06, 0x67, 0x10, 0x77, 0x31, 0x92, 0x12, 0x69, 0x2e, 0xce, 0xdc, 0xc4, 0x8a, 0xf8,
	0x82, 0xa2, 0xcc, 0xe4, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xde, 0x20, 0x8e, 0xdc, 0xc4, 0x8a,
	0x00, 0x10, 0x5f, 0x49, 0x81, 0x8b, 0xc7, 0xaf, 0x34, 0xd7, 0x3d, 0xb5, 0x04, 0x62, 0xa8, 0x90,
	0x00, 0x17, 0x73, 0x5e, 0x69, 0xae, 0x04, 0x23, 0x58, 0x19, 0x88, 0xa9, 0x64, 0xcf, 0xc5, 0x06,
	0x95, 0x93, 0xe7, 0xe2, 0x46, 0xb2, 0x0b, 0xac, 0x86, 0x33, 0x88, 0x0b, 0x61, 0x95, 0x90, 0x08,
	0x17, 0x2b, 0xb2, 0x2d, 0x10, 0x8e, 0x92, 0x35, 0x17, 0x3b, 0xc4, 0x80, 0x62, 0x21, 0x03, 0x2e,
	0x76, 0x88, 0x72, 0x88, 0x43, 0xb9, 0x8d, 0xc4, 0xf4, 0x50, 0xbd, 0xa7, 0x07, 0x51, 0x19, 0x04,
	0x53, 0x66, 0xb4, 0x9c, 0x91, 0x8b, 0x17, 0x22, 0x16, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a,
	0xe4, 0xc5, 0xc5, 0x0f, 0x77, 0x6e, 0xb1, 0x53, 0xa5, 0x5f, 0x69, 0xae, 0x90, 0x0c, 0xba, 0x29,
	0xc8, 0x5e, 0x92, 0x12, 0xc7, 0x6e, 0x47, 0xb1, 0x12, 0x83, 0x90, 0x17, 0x97, 0x00, 0xb2, 0x59,
	0x60, 0x4f, 0x48, 0x63, 0x57, 0x0e, 0x0e, 0x4b, 0x3c, 0x66, 0x39, 0xb1, 0x45, 0xb1, 0xe4, 0x26,
	0x66, 0xe6, 0x25, 0xb1, 0x81, 0xe3, 0xcd, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xae, 0x92,
	0xc7, 0xc7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SenbeiServiceClient is the client API for SenbeiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SenbeiServiceClient interface {
	GetSenbeisByNum(ctx context.Context, in *NumGetSenbei, opts ...grpc.CallOption) (*Senbeis, error)
	GetSenbeisByType(ctx context.Context, in *SenbeiTypes, opts ...grpc.CallOption) (*Senbeis, error)
}

type senbeiServiceClient struct {
	cc *grpc.ClientConn
}

func NewSenbeiServiceClient(cc *grpc.ClientConn) SenbeiServiceClient {
	return &senbeiServiceClient{cc}
}

func (c *senbeiServiceClient) GetSenbeisByNum(ctx context.Context, in *NumGetSenbei, opts ...grpc.CallOption) (*Senbeis, error) {
	out := new(Senbeis)
	err := c.cc.Invoke(ctx, "/senbei.example.SenbeiService/GetSenbeisByNum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *senbeiServiceClient) GetSenbeisByType(ctx context.Context, in *SenbeiTypes, opts ...grpc.CallOption) (*Senbeis, error) {
	out := new(Senbeis)
	err := c.cc.Invoke(ctx, "/senbei.example.SenbeiService/GetSenbeisByType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SenbeiServiceServer is the server API for SenbeiService service.
type SenbeiServiceServer interface {
	GetSenbeisByNum(context.Context, *NumGetSenbei) (*Senbeis, error)
	GetSenbeisByType(context.Context, *SenbeiTypes) (*Senbeis, error)
}

func RegisterSenbeiServiceServer(s *grpc.Server, srv SenbeiServiceServer) {
	s.RegisterService(&_SenbeiService_serviceDesc, srv)
}

func _SenbeiService_GetSenbeisByNum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NumGetSenbei)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenbeiServiceServer).GetSenbeisByNum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/senbei.example.SenbeiService/GetSenbeisByNum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenbeiServiceServer).GetSenbeisByNum(ctx, req.(*NumGetSenbei))
	}
	return interceptor(ctx, in, info, handler)
}

func _SenbeiService_GetSenbeisByType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SenbeiTypes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SenbeiServiceServer).GetSenbeisByType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/senbei.example.SenbeiService/GetSenbeisByType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SenbeiServiceServer).GetSenbeisByType(ctx, req.(*SenbeiTypes))
	}
	return interceptor(ctx, in, info, handler)
}

var _SenbeiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "senbei.example.SenbeiService",
	HandlerType: (*SenbeiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSenbeisByNum",
			Handler:    _SenbeiService_GetSenbeisByNum_Handler,
		},
		{
			MethodName: "GetSenbeisByType",
			Handler:    _SenbeiService_GetSenbeisByType_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
